　　1. 进程的创建
使用系统调用fork()创建两个子进程，当此程序运行时，在系统中有一个父进程和两个子进程活动。让每一个进程在屏幕上显示一个字符：父进程显示字符：“a" 子进程显示字符:"b"和"c"，试观察记录屏幕显示的结果，并分析原因。
      #include<stdio.h>
int main()
{
int p1 ,p2 ;
while((p1=fork())==-1);  
if(p1==0)           
putchar('b');
else
{
while((p2=fork())==-1);  
if(p2==0)             
putchar('c');
else    
putchar('a');            
}
return 0;
}
运行结果：bca
2. 修改上述程序，将每个进程输出一个字符改为每个进程输出一句话，再观察程序执行的现象，并分析原因。
#include <stdio.h>
#include <unistd.h>
int main()
{
	printf("system testing \n");
	execlp("date","date",0);
	printf("exec error !\n");
	return 0;
}
运行结果：system  testing
五 11月  4 22:23:51 CST 2011
分析：创建了进程，使用exec 函数族使子进程执行新的目标程序，输出结果为目标程序的输出。
3.修改2的程序，使用系统调用lockf() 来给每一个进程加锁，可以实现进程间的互斥，观察并分析出现的现象。
#include<stdio.h>
main()
{
	int p1,p2,i;

	猜测：加锁与不加锁效果不相同。